<style lang="less">
  /*顶部*/
  .bg{
    height: 100%;
    width: 100%;
    background-image: linear-gradient(#23A7A2, #0D7FC6);
    position: fixed;
    top:0;
    left:0;
  }
  .top{
    width:690rpx;
    height: 96rpx;
    background: #A4CCDD;
    border:1px solid #A4CCDD;
    border-radius: 20rpx;
    background: #F0F8FF;
     margin:40rpx 30rpx 0 30rpx;
     display: flex;
     align-items: center;
     justify-content: space-between;
     view{
       font-size: 30rpx;
       display: flex;
       align-items: center;
       justify-content: center;
      image{
        width: 40rpx;
        height: 40rpx;
        margin-left:34rpx;
        margin-right: 20rpx;
      } 
     }
     .img{
       width:18rpx;
       height: 36rpx;
       margin-right:34rpx;
     }
  }
  .wrap{
    width:690rpx;
    border-radius: 20rpx;
    margin:40rpx 30rpx 0 30rpx;
    background: #fff;
  }
  .middle{
    width:622rpx;
    height: 96rpx;
    font-size: 24rpx;
    border-top:1px solid #E3E3E3;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 34rpx;
    text{
      font-size: 32rpx;
    }
  }
  .middle:nth-of-type(1){
    border-top:0;
  }
  .empty{
    position: fixed;
    top:30%;
    left:0;
    font-size: 32rpx;
    text-align: center;
    width:100%;
    color:#fff;
    view{
      margin-top:10rpx;
    }
  }
  .toast{
    display: flex;
    align-items: center;
    position: fixed;
    top:40%;
    justify-content: center;
    width: 100%;
    p{
      border-radius: 10rpx;
      background: rgba(0, 0, 0, 0.6);
      color: #fff;
      font-size: 30rpx;
      padding:20rpx 30rpx;
    }
  }
  .page-top{
    top:0;
    left:0;
    z-index: 2;
    position: relative;
  }
</style>


<template lang="wxml">

  <view>
    <view class='bg'></view>
    <view  class="page-top">
    <view class="top">
      <view>
      <image src='../images/ic_test5.png' />
      <text>创建实验</text>
      </view>
      <image class="img" src='../images/arrow_r@3x.png' />
    </view>
    <view class="wrap"> 
      <block wx:for='{{list}}' wx:key="id" wx:for-index="idx">
        <view class="middle">
          <span>
            创建者：
          </span>
          {{item.user.nickName}}_{{item.user.mobile}}
        </view>
      </block>
    </view>

    <view class='empty' wx:if='{{list.length === 0}}'>
      <view>暂无会议</view>
    </view>

    <view class='toast' wx:if='{{showToast}}'><p>{{error}}</p></view>
  </view>
  </view>
  <!--新增地址-->
  <!-- <button catchtap="toAddAddressPage">新增地址</button> -->
</template>


<script>
  import wepy from 'wepy';
  import PageMixin from '../mixins/page';
  export default class AddressBook extends wepy.page {
    mixins = [PageMixin];
    config = {
      navigationBarTitleText: '田间实验',
      navigationBarBackgroundColor: '#fff'
    };
    components = {
    };
    data = {
      list: [{}, {}],
      delItem: null,
      showToast: false,
      error: '',
      user: this.user
    };
    // 获取列表
    getList () {
      // this.fetchDataPromise('meeting/wechat/queryMeetingApi.json', {}, {})
      // .then(function(data) {
      //   console.log(self.list)
      //   self.list = data.list.map(item => {
      //     let obj = item
      //     obj.createDate = self.timeFormat(obj.createDate)
      //     obj.start = obj.startDate.split(' ')[0]
      //     obj.end = obj.endDate.split(' ')[0]
      //     obj.edit = new Date(obj.startDate.replace(/-/g, "/")).getTime() < new Date().getTime() ? false : true
      //     return obj
      //   })
    }
    timeFormat (timeStr) {
      var dataOne = timeStr.split('T')[0];
      var dataTwo = timeStr.split('T')[1];
      var dataThree = dataTwo.split('+')[0];
      var newTimeStr = dataOne + ' ' + dataThree
      return newTimeStr;
    }
    delFun () {
      var self = this
      this.delItem.status = -1
      this.fetchDataPromise('meeting/wechat/updateMeetingApi.json', this.delItem, {})
      .then(function(data) {
        self.getList()
        self.$apply()
      })
    }
    toast (error) {
      this.showToast = true
      this.error = error
      var that = this
      setTimeout(() => {
        that.showToast = false
      }, 2000);
    }
    methods = {
      // 编辑
      edit (e) {
        if (e.target.dataset.item.createUser.split('_')[1] !== this.user.id) {
          this.toast('您不是该会议的创建者, 不能编辑')
          return
        }
        console.log(this.user, 'useruser')
        console.log(e.target.dataset.item.startDate.replace(/-/g, "/"), 'e.target.dataset.item.startDate')
        if (new Date(e.target.dataset.item.startDate.replace(/-/g, "/")).getTime() < new Date().getTime()) {
          this.toast('该会议已经开始, 不能编辑')
          return
        }
        wx.navigateTo({
          url: '/pages/editAddress?item=' + JSON.stringify(e.target.dataset.item)
        });
      },
      // 删除
      del (e) {
        if (e.target.dataset.item.createUser.split('_')[1] !== this.user.id) {
          this.toast('您不是该会议的创建者, 不能编辑')
          return
        }
        if (new Date(e.target.dataset.item.startDate.replace(/-/g, "/")).getTime() < new Date().getTime()) {
          this.toast('该会议已经开始, 不能删除')
          return
        }
        this.delItem = e.target.dataset.item
        var self = this
        wx.showModal({
          title:'提示',
          content:'是否确认删除当前会议?',
          cancelText:'取消',
          confirmText:'确认',
          success:function (res) {
            if (res.confirm) {
              self.delFun()
            };
          },
          fail:function (err) {
          },
        })

      }
    }
    onLoad () {
      
    }
    whenAppReadyShow() {
      // this.getList()
      this.showToast = false
      // 每次都刷新
    }
  }
</script>
