<style lang="less">
page {
  background: #111111;
}
.times {
  height: 130rpx;
  background: #010101;
  width: 100%;
  padding: 35rpx 0;
  // overflow: auto;
  // display: flex;
  // overflow-y: hidden;
  .time {
    white-space: nowrap;
    .block {
      color: #fff;
      font-size: 32rpx;
      width: 130rpx;
      text-align: center;
      margin: 5rpx 0;
      display: inline-block;
      .date {
        width: 60rpx;
        border-radius: 50%;
        margin-left: 35rpx;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 50rpx;
        margin-bottom: 15rpx;
        color: #acacac;
      }
      .week {
        width: 60rpx;
        height: 60rpx;
        margin-left: 35rpx;
        text-align: center;
        line-height: 60rpx;
        font-size: 30rpx;
        border-radius: 50%;
        color: #acacac;
        border: 1rpx solid #acacac;
      }
      .hover {
        background: #e02510;
        color: #fff;
        border: 1rpx solid #e02510;
      }
      .color {
        color: #fff;
      }
    }
  }
}
.times-point {
  margin-top: 30rpx;
  font-size: 34rpx;
  font-weight: bold;
  color: #e02510;
  margin-left: 20rpx;
  .point-tit {
    display: flex;
    align-items: center;
  }
  image {
    width: 42rpx;
    height: 52rpx;
    margin-left: 20rpx;
  }
}
.point {
  margin-top: 20rpx;
  width: 100%;
  height: 80rpx;
  white-space: nowrap;
  background: #2d2d2d;
  .block {
    display: inline-block;
    view {
      color: #acacac;
      width: 91rpx;
      text-align: center;
      height: 41rpx;
      margin-top: 19rpx;
      font-size: 26rpx;
      line-height: 41rpx;
      margin-right: 40rpx;
    }
    .hover {
      background: #e02510;
      color: #fff;
      border-radius: 30rpx;
    }
  }
}
.btn {
  margin-top: 69rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  view {
    width: 240rpx;
    height: 70rpx;
    border-radius: 35rpx;
    text-align: center;
    line-height: 70rpx;
    font-size: 32rpx;
  }
  .btn-left {
    background: #e02510;
    color: #fff;
    margin-right: 75rpx;
  }
  .btn-right {
    border: 1rpx solid #e02510;
    color: #fff;
  }
}
.teacher {
  margin-top: 75rpx;
  position: relative;
  margin-left: 25rpx;
  .icon8 {
    position: absolute;
    width: 702rpx;
    height: 450rpx;
    left: 0;
    top: 0;
  }
  .icon10 {
    position: absolute;
    width: 294rpx;
    height: 451rpx;
    left: 0;
    top: 0;
  }
  .teacher-name {
    position: absolute;
    right: 94rpx;
    top: 131rpx;
    width: 300rpx;
    height: 62rpx;
    font-size: 40rpx;
    color: #fff;
    line-height: 62rpx;
    image {
      width: 300rpx;
      height: 62rpx;
      position: absolute;
    }
    text {
      margin-left: 10rpx;
      font-weight: bold;
      position: absolute;
      z-index: 2;
    }
  }
  .introduce {
    width: 372rpx;
    position: absolute;
    right: 46rpx;
    top: 224rpx;
    line-height: 2;
    font-size: 24rpx;
    color: #fff;
  }
}
.item-list {
  margin-top: 26rpx;
  .item {
    margin: 0 26rpx;
    background: #2d2d2d;
    margin-bottom: 25rpx;
    height: 160rpx;
    display: flex;
    align-items: center;
    position: relative;
    .logo {
      width: 140rpx;
      height: 140rpx;
      margin: 0 49rpx 0 33rpx;
    }
    .icon29 {
      width: 160rpx;
      height: 50rpx;
      position: absolute;
      right: 0;
      bottom: 33rpx;
    }
    .name {
      .name-tips {
        font-size: 36rpx;
        font-weight: bold;
        color: #fff;
        margin-bottom: 31rpx;
      }
      .tips {
        color: #acacac;
        font-size: 24rpx;
        text {
          margin-right: 15rpx;
        }
      }
    }
  }
}
</style>

<template lang="wxml">
  <view class="top">
    <header />
    <view class='times' style="margin-top:{{height*2 + 20}}px">
      <scroll-view scroll-x="true" scroll-into-view="id_{{currentIndex}}" class="time">
        <view class="block" wx:for="{{date}}" wx:for-item="item" wx:for-index="idx" data-index="{{idx}}" id="id_{{idx}}" bindtap='getDate'>
          <view class="{{currentIndex === idx ? 'color date' : 'date'}}">{{item.date}}</view>
          <view  class="{{currentIndex === idx ? 'hover week' : 'week'}}">{{item.isWeek ? item.week : item.month + '月'}}</view>
        </view>
      </scroll-view>
    </view>
    <view class="times-point">
      <view class="point-tit">
        <text>请选择时间段</text>
        <image src="../../images/icon7.png" class="icon7"/>
      </view>
    </view>

    <view class="point">
      <scroll-view scroll-x="true" class="point-time">
        <view class="block" wx:for="{{leftData}}" wx:for-item="item" wx:for-index="idx" data-item="{{item}}" id="id_{{idx}}" bindtap='getTime'>
          <view class="{{formDatatime === item.id ? 'hover' : ''}}">{{item.name}}</view>
        </view>
      </scroll-view>
    </view>

    <view class="btn" wx:if="{{tabIndex == 0}}">
      <view class="btn-left" @tap="tabFun">立即约课</view>
      <view class="btn-right"  @tap="tabFuns">预约其他教练</view>
    </view>
    <view class="item-list" wx:if="{{tabIndex !== 0}}">
      <view class="item" wx:for="{{datas.items}}">
        <image src="{{item.images[0]}}" class="logo"/>
        <view class="name">
          <view class="name-tips">{{item.name}}</view>
          <view class="tips">
            <text>{{item.introduce}}</text>
          </view>
        </view>
        <image src="../../images/icon29.png" data-id="{{item.id}}" class="icon29" @tap="yuyueFun">
      </view>
    </view>
    <view class="teacher" wx:else>
      <image src="../../images/icon8.png" class="icon8"/>
      <image src="{{datas.current.images[0]}}" class="icon10">
      <view class="teacher-name">
        <image src="../../images/icon9.png" class="icon9" />
        <text>{{datas.current.name}}</text>
      </view>
      <view class="introduce">
         {{datas.current.introduce}}
      </view>
    </view>
  </view>
</template>

<script>
/* global wx */
import wepy from "wepy";
import dayjs from "dayjs";
import header from "../../components/headers";
import PageMixin from "../../mixins/page";
export default class Course extends wepy.page {
  mixins = [PageMixin];
  config = {
    navigationBarBackgroundColor: "#fff"
  };
  components = {
    header
  };
  data = {
    tabIndex: 0,
    datas: [],
    branchId: null,
    loadUser: true, // 需要登录信息
    height: "",
    current: null,
    loadUser: true,
    isShow: true,
    date: [],
    currentIndex: null,
    timeIndex: null,
    leftData: [],
    formDatatime: null,
    formDate: null
  };
  checkFun(e) {
    if (!this.formDatatime) {
      wx.showToast({
        icon: "none",
        title: "请选择预约时间段"
      });
      return;
    }
    this.fetchDataPromise("calendar.json", {
      coachId:
        this.tabIndex === 0
          ? this.datas.current.id
          : e.currentTarget.dataset.id,
      branchId: this.branchId,
      time: this.formDatatime,
      date: this.formDate.dates,
      action: "reserve"
    }).then(data => {
      if (data.ret) {
        wx.showToast({
          title: "预约成功"
        });
      }
      this.$apply();
    });
  }
  methods = {
    getTime(e) {
      this.formDatatime = e.currentTarget.dataset.item.id;
    },
    yuyueFun(e) {
      this.checkFun(e);
    },
    // 立即约课
    tabFun() {
      this.checkFun();
    },
    tabFuns() {
      this.tabIndex = 1;
    },
    // 确认选择
    sureFun() {
      if (this.current === "1") {
        console.log(this.doorsIndex, "this.doorsIndex");
        this.branchId = this.leftData[this.doorsIndex].id;
        this.getDeatils(this.branchId);
        this.getCourse("info");
      }
      this.isLeftShow = false;
      console.log(this.branchItem, "branchItem");
    },
    // 重置
    resetFun() {
      if (this.current === "1") {
      } else if (this.current === "2") {
      } else {
      }
    },
    courseFun(e) {
      this.courseIndex = e.currentTarget.dataset.index;
    },
    doorsFun(e) {
      this.doorsIndex = e.currentTarget.dataset.index;
    },
    timeFun(e) {
      this.timeIndex = e.currentTarget.dataset.index;
    },
    isHidden() {
      this.isLeftShow = false;
    },
    go() {
      wx.navigateTo({
        url: "appointDetail"
      });
    },
    //跳转预约页面
    goReserve() {
      wx.navigateTo({
        url: "reserve"
      });
    },
    //跳转教练详情
    godetail() {
      wx.navigateTo({
        url: "coachDetail"
      });
    },
    //跳转模板选择
    tolesson() {
      wx.navigateTo({
        url: "lesson"
      });
    },
    btnTo() {},
    goCoach() {
      wx.navigateTo({
        url: "coach"
      });
    },
    tap_ch(e) {
      this.current = e.currentTarget.dataset.index;
      var that = this;
      if (e.currentTarget.dataset.index === "1") {
        this.leftData = JSON.parse(wx.getStorageSync("branchs"));
        this.isLeftShow = true;
        this.$apply();
        return;
      } else if (e.currentTarget.dataset.index === "2") {
        that.leftData = [{ name: "全部课程" }].concat(
          this.branchDetails.courses
        );
      } else {
        that.leftData = [
          { name: "全部时段", id: 0 },
          { name: "00:00-09:00", id: 1 },
          { name: "09:00-15:00", id: 2 },
          { name: "15:00-18:00", id: 3 },
          { name: "18:00-21:00", id: 4 },
          { name: "21:00-24:00", id: 5 }
        ];
      }
      this.isLeftShow = true;
    },
    // 显示下拉框
    btn() {
      this.isShow = !this.isShow;
      this.$apply();
    },
    getDate(e) {
      this.currentIndex = e.currentTarget.dataset.index;
      this.formDate = this.date[this.currentIndex];
    }
  };
  // 查询教练和课程
  getCourse(type) {
    this.fetchDataPromise("page/calendar.json", {
      action: type,
      branchId: this.branchId ? this.branchId : 6,
      date: this.date[this.currentIndex].dates,
      time: this.timeIndex
    }).then(res => {
      console.log(res);
      this.courseList = res.items.map(item => {
        const obj = item;
        obj.times =
          obj.time === 1
            ? "00:00-09:00"
            : obj.time === 2
              ? "09:00-15:00"
              : obj.time === 3
                ? "15:00-18:00"
                : obj.time === 4
                  ? "18:00-21:00"
                  : obj.time === 5 ? "21:00-24:00" : "";
        return obj;
      });
      this.$apply();
    });
  }
  // 根据门店场馆id查询场馆详情
  getDeatils(id, callBack) {
    wx.request({
      url: this.$parent.globalData.dataUrl + "page/branch.json",
      data: {
        branchId: id
      },
      header: {
        "content-type": "application/x-www-form-urlencoded" // 默认值
      },
      success: res => {
        if (callBack) callBack();
        this.branchDetails = res.data.messages.data;
        this.$apply();
      },
      fail: function(error) {}
    });
  }
  onReachBottom() {}
  whenAppReadyShow() {
    for (let i = 9; i <= 22; i++) {
      this.leftData.push({
        name: i + ":00",
        id: i
      });
    }
    this.fetchDataPromise("page/calendar.json", {
      action: "coachs",
      branchId: this.branchId
    }).then(data => {
      this.datas = data;
      this.$apply();
    });
  }
  onLoad(options) {
    this.branchId = options.branchId;
  }
  onShow() {
    wx.getSystemInfo({
      success: res => {
        this.height = res.statusBarHeight;
        this.$broadcast("index-broadcast", {
          height: this.height,
          text: "OneFit健身"
        });
      }
    });
    this.date = [];
    this.returnDate(
      this.mGetDate(
        dayjs()
          .subtract(1, "month")
          .year(),
        dayjs()
          .subtract(1, "month")
          .month()
      ),
      dayjs().date(),
      dayjs()
        .subtract(1, "month")
        .month(),
      dayjs()
        .subtract(1, "month")
        .year()
    );
    this.returnDate(
      this.mGetDate(
        dayjs()
          .subtract(0, "month")
          .year(),
        dayjs()
          .subtract(0, "month")
          .month()
      ),
      0,
      dayjs()
        .subtract(0, "month")
        .month(),
      dayjs()
        .subtract(0, "month")
        .year()
    );
    this.returnDate(
      this.mGetDate(dayjs().year(), dayjs().month() + 1),
      0,
      dayjs().month() + 1,
      dayjs().year()
    );
    this.returnDate(
      1,
      0,
      dayjs()
        .add(2, "month")
        .month(),
      dayjs()
        .add(2, "month")
        .year()
    );
  }
  mGetDate(year, month) {
    var d = new Date(year, month, 0);
    return d.getDate();
  }
  returnDate(ary, date, month, year) {
    for (let i = 1 + date; i <= ary; i++) {
      this.date.push({
        dates:
          year +
          "-" +
          (month < 10 ? "0" + month : month) +
          "-" +
          (i < 10 ? "0" + i : i),
        date: i,
        month: month,
        week: this.returnWeek(dayjs(year + "-" + month + "-" + i).day()),
        isWeek:
          dayjs(year + "-" + month + "-" + i).valueOf() <
            dayjs()
              .subtract(8, "day")
              .valueOf() ||
          dayjs(year + "-" + month + "-" + i).valueOf() >
            dayjs()
              .add(14, "day")
              .valueOf()
            ? false
            : true
      });
      if (
        dayjs(year + "-" + month + "-" + i).isSame(
          dayjs(
            dayjs().year() + "-" + (dayjs().month() + 1) + "-" + dayjs().date()
          )
        )
      ) {
        this.currentIndex = this.date.length - 1;
        this.formDate = this.date[this.currentIndex];
      }
    }
  }
  returnWeek(week) {
    switch (week) {
      case 0:
        return "日";
        break;
      case 1:
        return "一";
        break;
      case 2:
        return "二";
        break;
      case 3:
        return "三";
        break;
      case 4:
        return "四";
        break;
      case 5:
        return "五";
        break;
      case 6:
        return "六";
        break;
    }
  }
  onShareAppMessage(res) {}
  regionchange(e) {
    console.log(e.type);
  }
  markertap(e) {
    console.log(e.markerId);
  }
  controltap(e) {
    console.log(e.controlId);
  }
}
</script>
