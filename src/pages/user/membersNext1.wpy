<style lang="less">
page {
  background: #111111;
}
.data {
  width: 700rpx;
  padding: 35rpx 0;
  background: #2d2d2d;
  margin: 0 25rpx;
  border-radius: 10rpx;
  margin-top: 20rpx;
  margin-bottom: 70rpx;
  .data-top {
    padding: 0 21rpx;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 36rpx;
    color: #e02510;
    image {
      width: 158rpx;
      height: 33rpx;
    }
  }
}
.headers {
  height: 160rpx;
  width: 700rpx;
  margin-left: 25rpx;
  background: #2d2d2d;
  border-radius: 10rpx;
  display: flex;
  align-items: center;
  image {
    width: 142rpx;
    height: 142rpx;
    border-radius: 50%;
    margin: 0 64rpx 0 22rpx;
  }
  .headers-top {
    text-align: center;
    .tit {
      font-size: 36rpx;
      color: rgba(224, 37, 16, 1);
      font-weight: bold;
      margin-bottom: 16rpx;
    }
  }
}
.icon26 {
  width: 100%;
  height: 4rpx;
  margin-top: 39rpx;
}
.inputs {
  margin-top: 39rpx;
  padding: 0 21rpx;
  clear: both;
  overflow: hidden;
  .inputs-left {
    float: left;
    font-size: 26rpx;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 20rpx;
    text {
      width: 85rpx;
      text-align: left;
      margin-left: 20rpx;
    }
    input {
      width: 200rpx;
      padding-left: 20rpx;
      height: 50rpx;
      border: 1rpx solid #acacac;
      border-radius: 10rpx;
    }
  }
  .inputs-last {
    margin-bottom: 0;
    text {
      width: 122rpx;
    }
    input {
      width: 504rpx;
    }
  }
}
.items {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 25rpx;
  .item {
    margin-left: 20rpx;
    width: 210rpx;
    font-size: 30rpx;
    color: #fff;
    text-align: center;
    font-weight: bold;
    image {
      width: 210rpx;
      height: 280rpx;
      margin-bottom: 16rpx;
    }
  }
}

.ticeTime {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 65rpx;
  color: #fff;
  font-size: 30rpx;
  font-weight: bold;
  picker {
    margin-right: 11rpx;
    width: 293rpx;
    height: 52rpx;
    border: 1rpx solid #acacac;
    position: relative;
    .picker {
      color: #fff;
      font-size: 26rpx;
      line-height: 52rpx;
      padding-left: 10rpx;
    }
    .right {
      position: absolute;
      right: -1rpx;
      top: -1rpx;
      width: 51rpx;
      height: 54rpx;
      bottom: 0;
      background: #e02510;
      display: flex;
      align-items: center;
      justify-content: center;
      image {
        width: 30rpx;
        height: 30rpx;
      }
    }
  }
}
.btn {
  width: 500rpx;
  height: 71rpx;
  margin-left: 125rpx;
  background: #e02510;
  font-size: 32rpx;
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 40rpx;
  margin-top: 46rpx;
  margin-bottom: 67rpx;
}
</style>

<template lang="wxml">
  <view class="top">
    <header />
    <view class="headers"  style="margin-top:{{(height*2 + 25)}}px">
      <image src="{{avatar}}" />
      <view class="headers-top">
        <view class="tit">{{nickName}}</view>
      </view>
    </view>
    <view class="data">
      
      <image src="../../images/icon26.png" class="icon26">
      <view class="inputs">
        <view class="inputs-left">
          <text>体脂率</text>
          <input bindblur="gettiz" bindconfirm="gettiz" value="{{formData.tiz}}"/>
        </view>

        <view class="inputs-left">
          <text>身高</text>
          <input bindblur="getsg" bindconfirm="getsg" value="{{formData.sg}}"/>
        </view>

        <view class="inputs-left">
          <text>肌肉</text>
          <input bindblur="getjr" bindconfirm="getjr" value="{{formData.jr}}"/>
        </view>

        <view class="inputs-left">
          <text>体重</text>
          <input bindblur="gettz" bindconfirm="gettz" value="{{formData.tz}}"/>
        </view>

        <view class="inputs-left">
          <text>脂肪</text>
          <input bindblur="getzf" bindconfirm="getzf" value="{{formData.zf}}"/>
        </view>

        <view class="inputs-left">
          <text>腰围</text>
          <input bindblur="getyw" bindconfirm="getyw" value="{{formData.yw}}"/>
        </view>
        <view class="inputs-left">
          <text>胸围</text>
          <input value="{{formData.xw}}"/>
        </view>
        <view class="inputs-left">
          <text>臂围</text>
          <input bindblur="gettw" bindconfirm="gettw" value="{{formData.tw}}"/>
        </view>

        <view class="inputs-left inputs-last">
          <text>基础代谢</text>
          <input bindblur="getdx" bindconfirm="getdx" value="{{formData.dx}}"/>
        </view>
      </view>
      <image src="../../images/icon26.png" class="icon26">

      <view class="items">
        <view class="item">
          <image src="../../images/icon14.png" />
          <view>正面对比照</view>
        </view>
        <view class="item">
          <image src="../../images/icon14.png" />
          <view>正面对比照</view>
        </view>
        <view class="item">
          <image src="../../images/icon14.png" />
          <view>正面对比照</view>
        </view>
      </view>

      <view class="ticeTime">体测时间：
        <picker class="text3" bindchange="bindPickerChange" value="{{index}}" range="{{array}}">
          <view class="picker">
            {{array[index]}}
          </view>
          <view class="right">
            <image src="../../images/icon45.png" class="icon45" />
          </view>
        </picker>
      </view>
    </view>
    <view class="btn" @tap="upload">上传</view>
  </view>
</template>

<script>
/* global wx */
import wepy from "wepy";
import PageMixin from "../../mixins/page";
import header from "../../components/headers";
export default class Course extends wepy.page {
  mixins = [PageMixin];
  config = {
    navigationBarBackgroundColor: "#fff"
  };
  components = {
    header
  };
  data = {
    height: "",
    details: {},
    id: null,
    calendarId: null,
    index: null,
    array: [],
    formData: {},
    nickName: null,
    avatar: null
  };
  onLoad(options) {
    this.id = options.id;
    this.nickName = options.nickName;
    this.avatar = options.avatar;
  }
  methods = {
    gettiz(e) {
      this.formData.tiz = e.detail.value;
    },
    gettz(e) {
      this.formData.tz = e.detail.value;
    },
    getsg(e) {
      this.formData.sg = e.detail.value;
    },
    gettw(e) {
      this.formData.tw = e.detail.value;
    },
    getxw(e) {
      this.formData.xw = e.detail.value;
    },
    getyw(e) {
      this.formData.yw = e.detail.value;
    },
    getdx(e) {
      this.formData.dx = e.detail.value;
    },
    getzf(e) {
      this.formData.zf = e.detail.value;
    },
    bindPickerChange(e) {
      this.index = e.detail.value;
      this.getVal();
    },
    // 上传
    upload() {
      const data = {};
      for (const key in this.formData) {
        if (key === "tiz") {
          data["体脂率"] = this.formData[key];
        } else if (key === "tz") {
          data["体重"] = this.formData[key];
        } else if (key === "jr") {
          data["肌肉"] = this.formData[key];
        } else if (key === "xw") {
          data["胸围"] = this.formData[key];
        } else if (key === "tw") {
          data["臀围"] = this.formData[key];
        } else if (key === "sg") {
          data["身高"] = this.formData[key];
        } else if (key === "zf") {
          data["脂肪"] = this.formData[key];
        } else if (key === "yw") {
          data["腰围"] = this.formData[key];
        }
      }
      var that = this;
      this.fetchDataPromise("page/coach.json", {
        action: "userTraning",
        userId: this.id,
        calendarId: this.details.items[this.index].id,
        data: JSON.stringify(data)
      }).then(function(data) {
        that.details = data;
        wx.showToast({
          title: "上传成功"
        });
        that.$apply();
        that.getFormData();
      });
    }
  };
  getVal() {
    this.fetchDataPromise("page/coach.json", {
      action: "userTraning",
      userId: this.id,
      calendarId: this.details.items[this.index].id
    }).then(function(data) {
      that.details = data;
      that.$apply();
      that.getFormData();
    });
  }
  getFormData() {
    for (const key in this.details.value) {
      if (key === "体脂率") {
        this.formData.tiz = this.details.value[key];
      } else if (key === "体重") {
        this.formData.tz = this.details.value[key];
      } else if (key === "肌肉") {
        this.formData.jr = this.details.value[key];
      } else if (key === "胸围") {
        this.formData.xw = this.details.value[key];
      } else if (key === "臀围") {
        this.formData.tw = this.details.value[key];
      } else if (key === "身高") {
        this.formData.sg = this.details.value[key];
      } else if (key === "脂肪") {
        this.formData.zf = this.details.value[key];
      } else if (key === "腰围") {
        this.formData.yw = this.details.value[key];
      }
    }
    this.$apply();
  }
  whenAppReadyShow() {
    var that = this;
    this.fetchDataPromise("page/coach.json", {
      action: "userTraning",
      userId: this.id
    }).then(function(data) {
      that.details = data;
      that.array = that.details.items.map((item, index) => {
        if (that.details.calendarId === item.id) {
          that.index = index;
        }
        return item.day;
      });
      that.getFormData();
      console.log(that.index);
      that.$apply();
    });
  }
  onShow() {
    wx.getSystemInfo({
      success: res => {
        this.height = res.statusBarHeight;
        this.$broadcast("index-broadcast", {
          height: this.height,
          text: "体测数据"
        });
      }
    });
  }
}
</script>
